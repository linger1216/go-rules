// Code generated from Expr.g4 by ANTLR 4.8. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 31, 255,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4,
	3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8,
	3, 8, 5, 8, 92, 10, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 5, 9, 99, 10, 9, 3,
	10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 5, 10, 110,
	10, 10, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 5, 11,
	120, 10, 11, 3, 12, 3, 12, 3, 12, 3, 12, 5, 12, 126, 10, 12, 3, 13, 3,
	13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 16, 3, 16, 3, 17, 3, 17,
	3, 17, 3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3,
	19, 3, 19, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 21, 3, 21,
	3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3,
	22, 3, 23, 3, 23, 7, 23, 174, 10, 23, 12, 23, 14, 23, 177, 11, 23, 3, 24,
	3, 24, 3, 24, 5, 24, 182, 10, 24, 3, 25, 3, 25, 3, 26, 3, 26, 3, 27, 3,
	27, 3, 27, 7, 27, 191, 10, 27, 12, 27, 14, 27, 194, 11, 27, 3, 27, 3, 27,
	3, 28, 3, 28, 3, 28, 5, 28, 201, 10, 28, 3, 29, 3, 29, 3, 29, 3, 29, 3,
	29, 3, 29, 3, 30, 3, 30, 3, 31, 5, 31, 212, 10, 31, 3, 31, 3, 31, 3, 31,
	6, 31, 217, 10, 31, 13, 31, 14, 31, 218, 3, 31, 5, 31, 222, 10, 31, 3,
	32, 3, 32, 3, 32, 7, 32, 227, 10, 32, 12, 32, 14, 32, 230, 11, 32, 5, 32,
	232, 10, 32, 3, 33, 3, 33, 5, 33, 236, 10, 33, 3, 33, 3, 33, 3, 34, 3,
	34, 3, 35, 3, 35, 7, 35, 244, 10, 35, 12, 35, 14, 35, 247, 11, 35, 3, 36,
	3, 36, 7, 36, 251, 10, 36, 12, 36, 14, 36, 254, 11, 36, 2, 2, 37, 3, 3,
	5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13,
	25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22,
	43, 23, 45, 24, 47, 2, 49, 2, 51, 2, 53, 25, 55, 2, 57, 2, 59, 2, 61, 26,
	63, 27, 65, 28, 67, 29, 69, 30, 71, 31, 3, 2, 11, 5, 2, 47, 47, 60, 60,
	97, 97, 4, 2, 67, 92, 99, 124, 4, 2, 36, 36, 94, 94, 10, 2, 36, 36, 49,
	49, 94, 94, 100, 100, 104, 104, 112, 112, 116, 116, 118, 118, 5, 2, 50,
	59, 67, 72, 99, 104, 3, 2, 50, 59, 3, 2, 51, 59, 4, 2, 71, 71, 103, 103,
	4, 2, 45, 45, 47, 47, 2, 267, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7,
	3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2,
	15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2,
	2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2,
	2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2,
	2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3,
	2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65,
	3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 3,
	73, 3, 2, 2, 2, 5, 75, 3, 2, 2, 2, 7, 77, 3, 2, 2, 2, 9, 79, 3, 2, 2, 2,
	11, 81, 3, 2, 2, 2, 13, 83, 3, 2, 2, 2, 15, 91, 3, 2, 2, 2, 17, 98, 3,
	2, 2, 2, 19, 109, 3, 2, 2, 2, 21, 119, 3, 2, 2, 2, 23, 125, 3, 2, 2, 2,
	25, 127, 3, 2, 2, 2, 27, 130, 3, 2, 2, 2, 29, 133, 3, 2, 2, 2, 31, 135,
	3, 2, 2, 2, 33, 137, 3, 2, 2, 2, 35, 140, 3, 2, 2, 2, 37, 143, 3, 2, 2,
	2, 39, 151, 3, 2, 2, 2, 41, 158, 3, 2, 2, 2, 43, 165, 3, 2, 2, 2, 45, 171,
	3, 2, 2, 2, 47, 181, 3, 2, 2, 2, 49, 183, 3, 2, 2, 2, 51, 185, 3, 2, 2,
	2, 53, 187, 3, 2, 2, 2, 55, 197, 3, 2, 2, 2, 57, 202, 3, 2, 2, 2, 59, 208,
	3, 2, 2, 2, 61, 211, 3, 2, 2, 2, 63, 231, 3, 2, 2, 2, 65, 233, 3, 2, 2,
	2, 67, 239, 3, 2, 2, 2, 69, 241, 3, 2, 2, 2, 71, 248, 3, 2, 2, 2, 73, 74,
	7, 42, 2, 2, 74, 4, 3, 2, 2, 2, 75, 76, 7, 43, 2, 2, 76, 6, 3, 2, 2, 2,
	77, 78, 7, 48, 2, 2, 78, 8, 3, 2, 2, 2, 79, 80, 7, 47, 2, 2, 80, 10, 3,
	2, 2, 2, 81, 82, 7, 93, 2, 2, 82, 12, 3, 2, 2, 2, 83, 84, 7, 95, 2, 2,
	84, 14, 3, 2, 2, 2, 85, 86, 7, 112, 2, 2, 86, 87, 7, 113, 2, 2, 87, 92,
	7, 118, 2, 2, 88, 89, 7, 80, 2, 2, 89, 90, 7, 81, 2, 2, 90, 92, 7, 86,
	2, 2, 91, 85, 3, 2, 2, 2, 91, 88, 3, 2, 2, 2, 92, 16, 3, 2, 2, 2, 93, 94,
	7, 99, 2, 2, 94, 95, 7, 112, 2, 2, 95, 99, 7, 102, 2, 2, 96, 97, 7, 113,
	2, 2, 97, 99, 7, 116, 2, 2, 98, 93, 3, 2, 2, 2, 98, 96, 3, 2, 2, 2, 99,
	18, 3, 2, 2, 2, 100, 101, 7, 118, 2, 2, 101, 102, 7, 116, 2, 2, 102, 103,
	7, 119, 2, 2, 103, 110, 7, 103, 2, 2, 104, 105, 7, 104, 2, 2, 105, 106,
	7, 99, 2, 2, 106, 107, 7, 110, 2, 2, 107, 108, 7, 117, 2, 2, 108, 110,
	7, 103, 2, 2, 109, 100, 3, 2, 2, 2, 109, 104, 3, 2, 2, 2, 110, 20, 3, 2,
	2, 2, 111, 112, 7, 80, 2, 2, 112, 113, 7, 87, 2, 2, 113, 114, 7, 78, 2,
	2, 114, 120, 7, 78, 2, 2, 115, 116, 7, 112, 2, 2, 116, 117, 7, 119, 2,
	2, 117, 118, 7, 110, 2, 2, 118, 120, 7, 110, 2, 2, 119, 111, 3, 2, 2, 2,
	119, 115, 3, 2, 2, 2, 120, 22, 3, 2, 2, 2, 121, 122, 7, 75, 2, 2, 122,
	126, 7, 80, 2, 2, 123, 124, 7, 107, 2, 2, 124, 126, 7, 112, 2, 2, 125,
	121, 3, 2, 2, 2, 125, 123, 3, 2, 2, 2, 126, 24, 3, 2, 2, 2, 127, 128, 7,
	63, 2, 2, 128, 129, 7, 63, 2, 2, 129, 26, 3, 2, 2, 2, 130, 131, 7, 35,
	2, 2, 131, 132, 7, 63, 2, 2, 132, 28, 3, 2, 2, 2, 133, 134, 7, 64, 2, 2,
	134, 30, 3, 2, 2, 2, 135, 136, 7, 62, 2, 2, 136, 32, 3, 2, 2, 2, 137, 138,
	7, 64, 2, 2, 138, 139, 7, 63, 2, 2, 139, 34, 3, 2, 2, 2, 140, 141, 7, 62,
	2, 2, 141, 142, 7, 63, 2, 2, 142, 36, 3, 2, 2, 2, 143, 144, 7, 101, 2,
	2, 144, 145, 7, 113, 2, 2, 145, 146, 7, 112, 2, 2, 146, 147, 7, 118, 2,
	2, 147, 148, 7, 99, 2, 2, 148, 149, 7, 107, 2, 2, 149, 150, 7, 112, 2,
	2, 150, 38, 3, 2, 2, 2, 151, 152, 7, 114, 2, 2, 152, 153, 7, 116, 2, 2,
	153, 154, 7, 103, 2, 2, 154, 155, 7, 104, 2, 2, 155, 156, 7, 107, 2, 2,
	156, 157, 7, 122, 2, 2, 157, 40, 3, 2, 2, 2, 158, 159, 7, 117, 2, 2, 159,
	160, 7, 119, 2, 2, 160, 161, 7, 104, 2, 2, 161, 162, 7, 104, 2, 2, 162,
	163, 7, 107, 2, 2, 163, 164, 7, 122, 2, 2, 164, 42, 3, 2, 2, 2, 165, 166,
	7, 116, 2, 2, 166, 167, 7, 103, 2, 2, 167, 168, 7, 105, 2, 2, 168, 169,
	7, 103, 2, 2, 169, 170, 7, 122, 2, 2, 170, 44, 3, 2, 2, 2, 171, 175, 5,
	51, 26, 2, 172, 174, 5, 47, 24, 2, 173, 172, 3, 2, 2, 2, 174, 177, 3, 2,
	2, 2, 175, 173, 3, 2, 2, 2, 175, 176, 3, 2, 2, 2, 176, 46, 3, 2, 2, 2,
	177, 175, 3, 2, 2, 2, 178, 182, 9, 2, 2, 2, 179, 182, 5, 49, 25, 2, 180,
	182, 5, 51, 26, 2, 181, 178, 3, 2, 2, 2, 181, 179, 3, 2, 2, 2, 181, 180,
	3, 2, 2, 2, 182, 48, 3, 2, 2, 2, 183, 184, 4, 50, 59, 2, 184, 50, 3, 2,
	2, 2, 185, 186, 9, 3, 2, 2, 186, 52, 3, 2, 2, 2, 187, 192, 7, 36, 2, 2,
	188, 191, 5, 55, 28, 2, 189, 191, 10, 4, 2, 2, 190, 188, 3, 2, 2, 2, 190,
	189, 3, 2, 2, 2, 191, 194, 3, 2, 2, 2, 192, 190, 3, 2, 2, 2, 192, 193,
	3, 2, 2, 2, 193, 195, 3, 2, 2, 2, 194, 192, 3, 2, 2, 2, 195, 196, 7, 36,
	2, 2, 196, 54, 3, 2, 2, 2, 197, 200, 7, 94, 2, 2, 198, 201, 9, 5, 2, 2,
	199, 201, 5, 57, 29, 2, 200, 198, 3, 2, 2, 2, 200, 199, 3, 2, 2, 2, 201,
	56, 3, 2, 2, 2, 202, 203, 7, 119, 2, 2, 203, 204, 5, 59, 30, 2, 204, 205,
	5, 59, 30, 2, 205, 206, 5, 59, 30, 2, 206, 207, 5, 59, 30, 2, 207, 58,
	3, 2, 2, 2, 208, 209, 9, 6, 2, 2, 209, 60, 3, 2, 2, 2, 210, 212, 7, 47,
	2, 2, 211, 210, 3, 2, 2, 2, 211, 212, 3, 2, 2, 2, 212, 213, 3, 2, 2, 2,
	213, 214, 5, 63, 32, 2, 214, 216, 7, 48, 2, 2, 215, 217, 9, 7, 2, 2, 216,
	215, 3, 2, 2, 2, 217, 218, 3, 2, 2, 2, 218, 216, 3, 2, 2, 2, 218, 219,
	3, 2, 2, 2, 219, 221, 3, 2, 2, 2, 220, 222, 5, 65, 33, 2, 221, 220, 3,
	2, 2, 2, 221, 222, 3, 2, 2, 2, 222, 62, 3, 2, 2, 2, 223, 232, 7, 50, 2,
	2, 224, 228, 9, 8, 2, 2, 225, 227, 9, 7, 2, 2, 226, 225, 3, 2, 2, 2, 227,
	230, 3, 2, 2, 2, 228, 226, 3, 2, 2, 2, 228, 229, 3, 2, 2, 2, 229, 232,
	3, 2, 2, 2, 230, 228, 3, 2, 2, 2, 231, 223, 3, 2, 2, 2, 231, 224, 3, 2,
	2, 2, 232, 64, 3, 2, 2, 2, 233, 235, 9, 9, 2, 2, 234, 236, 9, 10, 2, 2,
	235, 234, 3, 2, 2, 2, 235, 236, 3, 2, 2, 2, 236, 237, 3, 2, 2, 2, 237,
	238, 5, 63, 32, 2, 238, 66, 3, 2, 2, 2, 239, 240, 7, 12, 2, 2, 240, 68,
	3, 2, 2, 2, 241, 245, 7, 46, 2, 2, 242, 244, 7, 34, 2, 2, 243, 242, 3,
	2, 2, 2, 244, 247, 3, 2, 2, 2, 245, 243, 3, 2, 2, 2, 245, 246, 3, 2, 2,
	2, 246, 70, 3, 2, 2, 2, 247, 245, 3, 2, 2, 2, 248, 252, 7, 34, 2, 2, 249,
	251, 5, 67, 34, 2, 250, 249, 3, 2, 2, 2, 251, 254, 3, 2, 2, 2, 252, 250,
	3, 2, 2, 2, 252, 253, 3, 2, 2, 2, 253, 72, 3, 2, 2, 2, 254, 252, 3, 2,
	2, 2, 21, 2, 91, 98, 109, 119, 125, 175, 181, 190, 192, 200, 211, 218,
	221, 228, 231, 235, 245, 252, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'('", "')'", "'.'", "'-'", "'['", "']'", "", "", "", "", "", "'=='",
	"'!='", "'>'", "'<'", "'>='", "'<='", "'contain'", "'prefix'", "'suffix'",
	"'regex'", "", "", "", "", "", "'\n'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "NOT", "LOGICAL_OPERATOR", "BOOLEAN", "NULL",
	"IN", "EQ", "NE", "GT", "LT", "GE", "LE", "CONTAIN", "PREFIX", "SUFFIX",
	"REGEX", "ATTRNAME", "STRING", "DOUBLE", "INT", "EXP", "NEWLINE", "COMMA",
	"SP",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "NOT", "LOGICAL_OPERATOR",
	"BOOLEAN", "NULL", "IN", "EQ", "NE", "GT", "LT", "GE", "LE", "CONTAIN",
	"PREFIX", "SUFFIX", "REGEX", "ATTRNAME", "ATTR_NAME_CHAR", "DIGIT", "ALPHA",
	"STRING", "ESC", "UNICODE", "HEX", "DOUBLE", "INT", "EXP", "NEWLINE", "COMMA",
	"SP",
}

type ExprLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewExprLexer(input antlr.CharStream) *ExprLexer {

	l := new(ExprLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Expr.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ExprLexer tokens.
const (
	ExprLexerT__0             = 1
	ExprLexerT__1             = 2
	ExprLexerT__2             = 3
	ExprLexerT__3             = 4
	ExprLexerT__4             = 5
	ExprLexerT__5             = 6
	ExprLexerNOT              = 7
	ExprLexerLOGICAL_OPERATOR = 8
	ExprLexerBOOLEAN          = 9
	ExprLexerNULL             = 10
	ExprLexerIN               = 11
	ExprLexerEQ               = 12
	ExprLexerNE               = 13
	ExprLexerGT               = 14
	ExprLexerLT               = 15
	ExprLexerGE               = 16
	ExprLexerLE               = 17
	ExprLexerCONTAIN          = 18
	ExprLexerPREFIX           = 19
	ExprLexerSUFFIX           = 20
	ExprLexerREGEX            = 21
	ExprLexerATTRNAME         = 22
	ExprLexerSTRING           = 23
	ExprLexerDOUBLE           = 24
	ExprLexerINT              = 25
	ExprLexerEXP              = 26
	ExprLexerNEWLINE          = 27
	ExprLexerCOMMA            = 28
	ExprLexerSP               = 29
)
